cleanedWord.lengthcleanedWord.lengthcleanedWord.lengthcleanedWord.length


  //RECURSIVE STARTS HERE:                                                                                                                                                                                                                                                                                                                                             
//   int currentIndex;                                                                                                                                                                                                                                                                                                                                                    
//   char currentChar;                                                                                                                                                                                                                                                                                                                                                    

//   //std::array<Trie*, ALPHABET_SIZE>& roots = this->roots;                                                                                                                                                                                                                                                                                                             
//   cout << this->end_of_word << endl; ////                                                                                                                                                                                                                                                                                                                              


//   if (this->end_of_word == true) {                                                                                                                                                                                                                                                                                                                                     
//     // char finalWord[depth+1];                                                                                                                                                                                                                                                                                                                                        
//     // finalWord[depth+1] = currentChar;                                                                                                                                                                                                                                                                                                                               
//     //char finalWord[depth+1];                                                                                                                                                                                                                                                                                                                                         
//     //return finalWord;                                                                                                                                                                                                                                                                                                                                                
//     cout << this->end_of_word << endl;                                                                                                                                                                                                                                                                                                                                 
//     cout << "reached end prefix" << endl;                                                                                                                                                                                                                                                                                                                              
//     return new char[depth+1];                                                                                                                                                                                                                                                                                                                                          

//     }                                                                                                                                                                                                                                                                                                                                                                  

//   //cout << this->end_of_word << endl;                                                                                                                                                                                                                                                                                                                                 

//   //cout << strlen(str) << "string length" << endl; ////                                                                                                                                                                                                                                                                                                               
//   //cout << "hebob" << endl; ////                                                                                                                                                                                                                                                                                                                                      
//   if (depth < strlen(str)) {                                                                                                                                                                                                                                                                                                                                           
//       cout << "reached point 1" << endl; ////                                                                                                                                                                                                                                                                                                                          
//       //currentChar = *(str + depth);                                                                                                                                                                                                                                                                                                                                  
//       currentChar = str[depth];                                                                                                                                                                                                                                                                                                                                        
//       currentIndex = currentChar - 'a';                                                                                                                                                                                                                                                                                                                                
//       cout << currentChar;                                                                                                                                                                                                                                                                                                                                             
//       cout << currentIndex << endl;                                                                                                                                                                                                                                                                                                                                    

//       //cout << currentChar << endl; ////                                                                                                                                                                                                                                                                                                                              

//       if (this->roots[currentIndex] == nullptr) {                                                                                                                                                                                                                                                                                                                      
//      cout << "reached end" << endl;////                                                                                                                                                                                                                                                                                                                                
//      return nullptr;                                                                                                                                                                                                                                                                                                                                                   

//       }                                                                                                                                                                                                                                                                                                                                                                

//       else {                                                                                                                                                                                                                                                                                                                                                           
//      depth++;                                                                                                                                                                                                                                                                                                                                                          
//      return currentChar + this->roots[currentIndex]->firstWithPrefix(str, depth);                                                                                                                                                                                                                                                                                      

//       }                                                                                                                                                                                                                                                                                                                                                                
//   }                                                                                                                                                                                                                                                                                                                                                                    


//   if (depth >= strlen(str)) {                                                                                                                                                                                                                                                                                                                                          
//     //cout << "reached point 2" << endl; ////                                                                                                                                                                                                                                                                                                                          
//     char letters[] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};                                                                                                                                                                                                               
//     for (int i = 0; i < ALPHABET_SIZE; i++) {                                                                                                                                                                                                                                                                                                                          
//       currentIndex = i;                                                                                                                                                                                                                                                                                                                                                
//       currentChar = letters[currentIndex];                                                                                                                                                                                                                                                                                                                             
//       if (this->roots[currentIndex] == NULL) {                                                                                                                                                                                                                                                                                                                         
-UU-:----F1  trie.cpp       62% L376   (C++//l Abbrev) ----------------  //RECURSIVE STARTS HERE:                                                                                                                                                                                                                                                                                                                                             
//   int currentIndex;                                                                                                                                                                                                                                                                                                                                                    
//   char currentChar;                                                                                                                                                                                                                                                                                                                                                    

//   //std::array<Trie*, ALPHABET_SIZE>& roots = this->roots;                                                                                                                                                                                                                                                                                                             
//   cout << this->end_of_word << endl; ////                                                                                                                                                                                                                                                                                                                              


//   if (this->end_of_word == true) {                                                                                                                                                                                                                                                                                                                                     
//     // char finalWord[depth+1];                                                                                                                                                                                                                                                                                                                                        
//     // finalWord[depth+1] = currentChar;                                                                                                                                                                                                                                                                                                                               
//     //char finalWord[depth+1];                                                                                                                                                                                                                                                                                                                                         
//     //return finalWord;                                                                                                                                                                                                                                                                                                                                                
//     cout << this->end_of_word << endl;                                                                                                                                                                                                                                                                                                                                 
//     cout << "reached end prefix" << endl;                                                                                                                                                                                                                                                                                                                              
//     return new char[depth+1];                                                                                                                                                                                                                                                                                                                                          

//     }                                                                                                                                                                                                                                                                                                                                                                  

//   //cout << this->end_of_word << endl;                                                                                                                                                                                                                                                                                                                                 

//   //cout << strlen(str) << "string length" << endl; ////                                                                                                                                                                                                                                                                                                               
//   //cout << "hebob" << endl; ////                                                                                                                                                                                                                                                                                                                                      
//   if (depth < strlen(str)) {                                                                                                                                                                                                                                                                                                                                           
//       cout << "reached point 1" << endl; ////                                                                                                                                                                                                                                                                                                                          
//       //currentChar = *(str + depth);                                                                                                                                                                                                                                                                                                                                  
//       currentChar = str[depth];                                                                                                                                                                                                                                                                                                                                        
//       currentIndex = currentChar - 'a';                                                                                                                                                                                                                                                                                                                                
//       cout << currentChar;                                                                                                                                                                                                                                                                                                                                             
//       cout << currentIndex << endl;                                                                                                                                                                                                                                                                                                                                    

//       //cout << currentChar << endl; ////                                                                                                                                                                                                                                                                                                                              

//       if (this->roots[currentIndex] == nullptr) {                                                                                                                                                                                                                                                                                                                      
//      cout << "reached end" << endl;////                                                                                                                                                                                                                                                                                                                                
//      return nullptr;                                                                                                                                                                                                                                                                                                                                                   

//       }                                                                                                                                                                                                                                                                                                                                                                

//       else {                                                                                                                                                                                                                                                                                                                                                           
//      depth++;                                                                                                                                                                                                                                                                                                                                                          
//      return currentChar + this->roots[currentIndex]->firstWithPrefix(str, depth);                                                                                                                                                                                                                                                                                      

//       }                                                                                                                                                                                                                                                                                                                                                                
//   }                                                                                                                                                                                                                                                                                                                                                                    


//   if (depth >= strlen(str)) {                                                                                                                                                                                                                                                                                                                                          
//     //cout << "reached point 2" << endl; ////                                                                                                                                                                                                                                                                                                                          
//     char letters[] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};                                                                                                                                                                                                               
//     for (int i = 0; i < ALPHABET_SIZE; i++) {                                                                                                                                                                                                                                                                                                                          
//       currentIndex = i;                                                                                                                                                                                                                                                                                                                                                
//       currentChar = letters[currentIndex];                                                                                                                                                                                                                                                                                                                             
//       if (this->roots[currentIndex] == NULL) {                                                                                                                                                                                                                                                                                                                         
-UU-:----F1  trie.cpp       62% L376   (C++//l Abbrev) ----------------  //RECURSIVE STARTS HERE:                                                                                                                                                                                                                                                                                                                                             
//   int currentIndex;                                                                                                                                                                                                                                                                                                                                                    
//   char currentChar;                                                                                                                                                                                                                                                                                                                                                    

//   //std::array<Trie*, ALPHABET_SIZE>& roots = this->roots;                                                                                                                                                                                                                                                                                                             
//   cout << this->end_of_word << endl; ////                                                                                                                                                                                                                                                                                                                              


//   if (this->end_of_word == true) {                                                                                                                                                                                                                                                                                                                                     
//     // char finalWord[depth+1];                                                                                                                                                                                                                                                                                                                                        
//     // finalWord[depth+1] = currentChar;                                                                                                                                                                                                                                                                                                                               
//     //char finalWord[depth+1];                                                                                                                                                                                                                                                                                                                                         
//     //return finalWord;                                                                                                                                                                                                                                                                                                                                                
//     cout << this->end_of_word << endl;                                                                                                                                                                                                                                                                                                                                 
//     cout << "reached end prefix" << endl;                                                                                                                                                                                                                                                                                                                              
//     return new char[depth+1];                                                                                                                                                                                                                                                                                                                                          

//     }                                                                                                                                                                                                                                                                                                                                                                  

//   //cout << this->end_of_word << endl;                                                                                                                                                                                                                                                                                                                                 

//   //cout << strlen(str) << "string length" << endl; ////                                                                                                                                                                                                                                                                                                               
//   //cout << "hebob" << endl; ////                                                                                                                                                                                                                                                                                                                                      
//   if (depth < strlen(str)) {                                                                                                                                                                                                                                                                                                                                           
//       cout << "reached point 1" << endl; ////                                                                                                                                                                                                                                                                                                                          
//       //currentChar = *(str + depth);                                                                                                                                                                                                                                                                                                                                  
//       currentChar = str[depth];                                                                                                                                                                                                                                                                                                                                        
//       currentIndex = currentChar - 'a';                                                                                                                                                                                                                                                                                                                                
//       cout << currentChar;                                                                                                                                                                                                                                                                                                                                             
//       cout << currentIndex << endl;                                                                                                                                                                                                                                                                                                                                    

//       //cout << currentChar << endl; ////                                                                                                                                                                                                                                                                                                                              

//       if (this->roots[currentIndex] == nullptr) {                                                                                                                                                                                                                                                                                                                      
//      cout << "reached end" << endl;////                                                                                                                                                                                                                                                                                                                                
//      return nullptr;                                                                                                                                                                                                                                                                                                                                                   

//       }                                                                                                                                                                                                                                                                                                                                                                

//       else {                                                                                                                                                                                                                                                                                                                                                           
//      depth++;                                                                                                                                                                                                                                                                                                                                                          
//      return currentChar + this->roots[currentIndex]->firstWithPrefix(str, depth);                                                                                                                                                                                                                                                                                      

//       }                                                                                                                                                                                                                                                                                                                                                                
//   }                                                                                                                                                                                                                                                                                                                                                                    


//   if (depth >= strlen(str)) {                                                                                                                                                                                                                                                                                                                                          
//     //cout << "reached point 2" << endl; ////                                                                                                                                                                                                                                                                                                                          
//     char letters[] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};                                                                                                                                                                                                               
//     for (int i = 0; i < ALPHABET_SIZE; i++) {                                                                                                                                                                                                                                                                                                                          
//       currentIndex = i;                                                                                                                                                                                                                                                                                                                                                
//       currentChar = letters[currentIndex];                                                                                                                                                                                                                                                                                                                             
//       if (this->roots[currentIndex] == NULL) {                                                                                                                                                                                                                                                                                                                         
-UU-:----F1  trie.cpp       62% L376   (C++//l Abbrev) ----------------
